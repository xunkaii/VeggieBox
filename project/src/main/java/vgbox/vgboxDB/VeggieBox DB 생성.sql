CREATE TABLE MEMBER_INFORMATION(
ID VARCHAR2(50) PRIMARY KEY,
GRADE_NAME VARCHAR2(20),
PASSWORD VARCHAR2(50),
NAME VARCHAR2(30),
ADDRESS VARCHAR2(100),
CONTACT VARCHAR2(20),
AUTH VARCHAR2(20),
FOREIGN KEY (GRADE_NAME) REFERENCES GRADE(GRADE_NAME)
ON DELETE CASCADE
);

CREATE TABLE GRADE(
GRADE_NAME VARCHAR2(20) PRIMARY KEY,
DISCOUNT_RATE NUMBER,
GRADE_IMG VARCHAR2(50)
);

INSERT INTO GRADE VALUES('Bronze',1,'/img');
INSERT INTO GRADE VALUES('Silver',2,'/img');
INSERT INTO GRADE VALUES('Gold',4,'/img');
INSERT INTO GRADE VALUES('Platinum',8,'/img');

CREATE TABLE SELLER_REG_INFO(
ID VARCHAR2(50) PRIMARY KEY,
PASSWORD VARCHAR2(50),
NAME VARCHAR2(30),
ADDRESS VARCHAR2(100),
CONTACT VARCHAR2(20),
BUSINESS_NUM VARCHAR2(20),
AUTH VARCHAR2(20),
GRADE_NAME VARCHAR2(20)
);

CREATE TABLE MEMBERSHIP(
PRODUCT_NUM NUMBER PRIMARY KEY,
MEMS_BEGIN_DATE DATE,
MEMS_END_DATE DATE,
FOREIGN KEY (PRODUCT_NUM) REFERENCES PRODUCT(PRODUCT_NUM)
ON DELETE CASCADE
);

CREATE TABLE PRODUCT(
PRODUCT_NUM NUMBER PRIMARY KEY,
ID VARCHAR2(50),
PRODUCT_NAME VARCHAR2(50),
PRICE NUMBER,
RESERVATION_PERIOD DATE,
FOR_SALE NUMBER,
FOREIGN KEY (ID) REFERENCES SELLER_REG_INFO(ID) ON DELETE CASCADE
);

CREATE TABLE PRD_IMG(
PRODUCT_NUM NUMBER,
IMG VARCHAR2(100),
FOREIGN KEY (PRODUCT_NUM) REFERENCES PRODUCT(PRODUCT_NUM) ON DELETE CASCADE
);

CREATE TABLE RESERVATION (
PRODUCT_NUM NUMBER PRIMARY KEY,
ID VARCHAR2(50),
RES_DATE DATE,
PRICE NUMBER,
count NUMBER,
PAY_METHOD VARCHAR2(30),
SHIP_ADDRESS VARCHAR2(100),
RES_BEGIN_DATE DATE,
FOREIGN KEY (ID) REFERENCES MEMBER_INFORMATION(ID) ON DELETE CASCADE,
FOREIGN KEY (PRODUCT_NUM) REFERENCES PRODUCT(PRODUCT_NUM)
ON DELETE CASCADE
);

CREATE TABLE REVIEW (
PRODUCT_NUM NUMBER PRIMARY KEY,
ID VARCHAR2(50),
REVIEW_CONTENT VARCHAR2(200),
RATING NUMBER,
REVIEW_IMAGE VARCHAR2(100),
FOREIGN KEY (ID) REFERENCES MEMBER_INFORMATION(ID) ON DELETE CASCADE,
FOREIGN KEY (PRODUCT_NUM) REFERENCES PRODUCT(PRODUCT_NUM) ON DELETE CASCADE
);
SELECT * FROM CART;
SELECT * FROM ORDER_INFO oi;
ALTER TABLE cart DROP COLUMN total_price;
ALTER TABLE ORDER_INFO ADD ORDER_price NUMBER;
CREATE TABLE CART(
CART_NUM NUMBER PRIMARY KEY,
PRODUCT_NUM NUMBER,
ID VARCHAR2(50),
COUNT NUMBER,
FOREIGN KEY (PRODUCT_NUM) REFERENCES PRODUCT(PRODUCT_NUM) ON DELETE CASCADE,
FOREIGN KEY (ID) REFERENCES MEMBER_INFORMATION(ID) ON DELETE CASCADE
);

CREATE TABLE ORDER_INFO(
ORDER_NUM NUMBER PRIMARY KEY,
CART_NUM NUMBER,
ORDER_DATE DATE,
ORDER_PRICE NUMBER,
PAY_METHOD VARCHAR2(30),
SHIP_ADDRESS VARCHAR2(200),
SHIP_STATE VARCHAR2(20),
SHIP_BEGIN_DATE DATE,
FOREIGN KEY (CART_NUM) REFERENCES CART(CART_NUM) ON DELETE CASCADE
);

CREATE TABLE CANCEL(
ORDER_NUM NUMBER PRIMARY KEY,
CANCEL_DATE DATE,
CANCEL_VALID NUMBER,
FOREIGN KEY (ORDER_NUM) REFERENCES ORDER_INFO(ORDER_NUM) ON DELETE CASCADE
);

CREATE TABLE REFUND(
ORDER_NUM NUMBER PRIMARY KEY,
REF_DATE DATE,
REF_VALID NUMBER,
FOREIGN KEY (ORDER_NUM) REFERENCES ORDER_INFO(ORDER_NUM) ON DELETE CASCADE
);

DROP TABLE REFUND;
DROP TABLE CANCEL;
DROP TABLE ORDER_INFO;
DROP TABLE CART;
DROP TABLE REVIEW ;
DROP TABLE RESERVATION;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE MEMBERSHIP;
DROP TABLE GRADE;
DROP TABLE MEMBER_INFORMATION;
DROP TABLE SELLER_REG_INFO;

SELECT * FROM MEMBER_INFORMATION mi ;
