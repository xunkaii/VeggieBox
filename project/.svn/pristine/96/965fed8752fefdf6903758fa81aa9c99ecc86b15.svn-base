package vgbox.vgboxController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import vgbox.vgboxDB.VO.Member;
import vgbox.vgboxDB.VO.Seller;
import vgbox.vgboxService.MemberService;

@Controller
public class MemberController {
	@Autowired
	public MemberService service;
	
	@RequestMapping("index.do")
	public String main() {
	        return "WEB-INF\\views\\index.jsp";
	}

	    
	@RequestMapping("checkId.do")
	@ResponseBody
	public String checkId(@RequestParam(value = "choice", defaultValue = "") String choice,
	                       @RequestParam(value = "id", defaultValue = "") String id) {
	    
	    String checkid = "";
	    
	    if (choice.equals("user")) {
	        checkid = service.checkID("user", id);
	    } else if (choice.equals("seller")) {
	        checkid = service.checkID("seller", id);
	    }
	    
	    return checkid;
	}
	    
	 // http://localhost:5020/project/memReg.do
	 // 회원가입
	    @RequestMapping("memReg.do")
	    public String memReg(@RequestParam(value = "choice", defaultValue = "") String choice, Member m, Seller s, Model d) {
	        
	        d.addAttribute("regYN", service.join(choice, m, s));
     
	       return "WEB-INF\\views\\login_join\\register.jsp";
	    }
	    
	    
	    // http://localhost:5020/project/loginPage.do
	    @RequestMapping("loginPage.do")
	    public String loginPage() {
	    	return "WEB-INF\\views\\login_join\\login.jsp";
	    }
	    
	    
	    // 로그인 기능
	    @ResponseBody
	    @RequestMapping("login.do")
	    public String memLogin(HttpServletRequest request, @RequestParam(value = "choice", defaultValue = "") String choice, 
	                            Member m, Seller s, Model model) {
	        
	        HttpSession session = request.getSession();
	        
	        if(choice.equals("user")) {
	            Member mvo = service.login(m.getId(), m.getPassword());
	            if(mvo != null) {
	                session.setAttribute("loginSession", mvo);
	                session.setMaxInactiveInterval(1800);
	                return "success";
	            }
	        } else if(choice.equals("seller")) {
	            Seller svo = service.loginS(s.getId(), s.getPassword());
	            if(svo != null) {
	                session.setAttribute("loginSession", svo);
	                session.setMaxInactiveInterval(1800);
	                return "success";
	            }
	        }
	        
	        return "fail";
	    }
	    
	    // 아이디 찾기
	    @RequestMapping("forgotID.do")
	    public String forgotID(@RequestParam(value="choice",defaultValue="") String choice,
	    						Member m, Seller s) {
	    	String id = "";
	    	
	    	if(!choice.equals("")) {
	    		if(choice.equals("user")) {
	    			id = service.findIDm(m.getName(), m.getContact());
	    		}else if(choice.equals("seller")) {
	    			id = service.findIDs(s.getName(), s.getId(), s.getContact());
	    		}
	    	}
	    	
	    	return id;
	    }
	    
	    // 비밀번호 찾기
	    
}

	


		
